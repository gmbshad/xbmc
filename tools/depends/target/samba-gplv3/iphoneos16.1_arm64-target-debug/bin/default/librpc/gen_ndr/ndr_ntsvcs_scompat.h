#ifndef __NDR_NTSVCS_SCOMPAT_H__
#define __NDR_NTSVCS_SCOMPAT_H__

struct pipes_struct;
struct dcesrv_endpoint_server;
struct dcesrv_call_state;

const struct dcesrv_endpoint_server *ntsvcs_get_ep_server(void);

NTSTATUS ntsvcs__op_ndr_pull(struct dcesrv_call_state *dce_call, TALLOC_CTX *mem_ctx, struct ndr_pull *pull, void **r);
struct PNP_Disconnect;
WERROR _PNP_Disconnect(struct pipes_struct *p, struct PNP_Disconnect *r);
struct PNP_Connect;
WERROR _PNP_Connect(struct pipes_struct *p, struct PNP_Connect *r);
struct PNP_GetVersion;
WERROR _PNP_GetVersion(struct pipes_struct *p, struct PNP_GetVersion *r);
struct PNP_GetGlobalState;
WERROR _PNP_GetGlobalState(struct pipes_struct *p, struct PNP_GetGlobalState *r);
struct PNP_InitDetection;
WERROR _PNP_InitDetection(struct pipes_struct *p, struct PNP_InitDetection *r);
struct PNP_ReportLogOn;
WERROR _PNP_ReportLogOn(struct pipes_struct *p, struct PNP_ReportLogOn *r);
struct PNP_ValidateDeviceInstance;
WERROR _PNP_ValidateDeviceInstance(struct pipes_struct *p, struct PNP_ValidateDeviceInstance *r);
struct PNP_GetRootDeviceInstance;
WERROR _PNP_GetRootDeviceInstance(struct pipes_struct *p, struct PNP_GetRootDeviceInstance *r);
struct PNP_GetRelatedDeviceInstance;
WERROR _PNP_GetRelatedDeviceInstance(struct pipes_struct *p, struct PNP_GetRelatedDeviceInstance *r);
struct PNP_EnumerateSubKeys;
WERROR _PNP_EnumerateSubKeys(struct pipes_struct *p, struct PNP_EnumerateSubKeys *r);
struct PNP_GetDeviceList;
WERROR _PNP_GetDeviceList(struct pipes_struct *p, struct PNP_GetDeviceList *r);
struct PNP_GetDeviceListSize;
WERROR _PNP_GetDeviceListSize(struct pipes_struct *p, struct PNP_GetDeviceListSize *r);
struct PNP_GetDepth;
WERROR _PNP_GetDepth(struct pipes_struct *p, struct PNP_GetDepth *r);
struct PNP_GetDeviceRegProp;
WERROR _PNP_GetDeviceRegProp(struct pipes_struct *p, struct PNP_GetDeviceRegProp *r);
struct PNP_SetDeviceRegProp;
WERROR _PNP_SetDeviceRegProp(struct pipes_struct *p, struct PNP_SetDeviceRegProp *r);
struct PNP_GetClassInstance;
WERROR _PNP_GetClassInstance(struct pipes_struct *p, struct PNP_GetClassInstance *r);
struct PNP_CreateKey;
WERROR _PNP_CreateKey(struct pipes_struct *p, struct PNP_CreateKey *r);
struct PNP_DeleteRegistryKey;
WERROR _PNP_DeleteRegistryKey(struct pipes_struct *p, struct PNP_DeleteRegistryKey *r);
struct PNP_GetClassCount;
WERROR _PNP_GetClassCount(struct pipes_struct *p, struct PNP_GetClassCount *r);
struct PNP_GetClassName;
WERROR _PNP_GetClassName(struct pipes_struct *p, struct PNP_GetClassName *r);
struct PNP_DeleteClassKey;
WERROR _PNP_DeleteClassKey(struct pipes_struct *p, struct PNP_DeleteClassKey *r);
struct PNP_GetInterfaceDeviceAlias;
WERROR _PNP_GetInterfaceDeviceAlias(struct pipes_struct *p, struct PNP_GetInterfaceDeviceAlias *r);
struct PNP_GetInterfaceDeviceList;
WERROR _PNP_GetInterfaceDeviceList(struct pipes_struct *p, struct PNP_GetInterfaceDeviceList *r);
struct PNP_GetInterfaceDeviceListSize;
WERROR _PNP_GetInterfaceDeviceListSize(struct pipes_struct *p, struct PNP_GetInterfaceDeviceListSize *r);
struct PNP_RegisterDeviceClassAssociation;
WERROR _PNP_RegisterDeviceClassAssociation(struct pipes_struct *p, struct PNP_RegisterDeviceClassAssociation *r);
struct PNP_UnregisterDeviceClassAssociation;
WERROR _PNP_UnregisterDeviceClassAssociation(struct pipes_struct *p, struct PNP_UnregisterDeviceClassAssociation *r);
struct PNP_GetClassRegProp;
WERROR _PNP_GetClassRegProp(struct pipes_struct *p, struct PNP_GetClassRegProp *r);
struct PNP_SetClassRegProp;
WERROR _PNP_SetClassRegProp(struct pipes_struct *p, struct PNP_SetClassRegProp *r);
struct PNP_CreateDevInst;
WERROR _PNP_CreateDevInst(struct pipes_struct *p, struct PNP_CreateDevInst *r);
struct PNP_DeviceInstanceAction;
WERROR _PNP_DeviceInstanceAction(struct pipes_struct *p, struct PNP_DeviceInstanceAction *r);
struct PNP_GetDeviceStatus;
WERROR _PNP_GetDeviceStatus(struct pipes_struct *p, struct PNP_GetDeviceStatus *r);
struct PNP_SetDeviceProblem;
WERROR _PNP_SetDeviceProblem(struct pipes_struct *p, struct PNP_SetDeviceProblem *r);
struct PNP_DisableDevInst;
WERROR _PNP_DisableDevInst(struct pipes_struct *p, struct PNP_DisableDevInst *r);
struct PNP_UninstallDevInst;
WERROR _PNP_UninstallDevInst(struct pipes_struct *p, struct PNP_UninstallDevInst *r);
struct PNP_AddID;
WERROR _PNP_AddID(struct pipes_struct *p, struct PNP_AddID *r);
struct PNP_RegisterDriver;
WERROR _PNP_RegisterDriver(struct pipes_struct *p, struct PNP_RegisterDriver *r);
struct PNP_QueryRemove;
WERROR _PNP_QueryRemove(struct pipes_struct *p, struct PNP_QueryRemove *r);
struct PNP_RequestDeviceEject;
WERROR _PNP_RequestDeviceEject(struct pipes_struct *p, struct PNP_RequestDeviceEject *r);
struct PNP_IsDockStationPresent;
WERROR _PNP_IsDockStationPresent(struct pipes_struct *p, struct PNP_IsDockStationPresent *r);
struct PNP_RequestEjectPC;
WERROR _PNP_RequestEjectPC(struct pipes_struct *p, struct PNP_RequestEjectPC *r);
struct PNP_HwProfFlags;
WERROR _PNP_HwProfFlags(struct pipes_struct *p, struct PNP_HwProfFlags *r);
struct PNP_GetHwProfInfo;
WERROR _PNP_GetHwProfInfo(struct pipes_struct *p, struct PNP_GetHwProfInfo *r);
struct PNP_AddEmptyLogConf;
WERROR _PNP_AddEmptyLogConf(struct pipes_struct *p, struct PNP_AddEmptyLogConf *r);
struct PNP_FreeLogConf;
WERROR _PNP_FreeLogConf(struct pipes_struct *p, struct PNP_FreeLogConf *r);
struct PNP_GetFirstLogConf;
WERROR _PNP_GetFirstLogConf(struct pipes_struct *p, struct PNP_GetFirstLogConf *r);
struct PNP_GetNextLogConf;
WERROR _PNP_GetNextLogConf(struct pipes_struct *p, struct PNP_GetNextLogConf *r);
struct PNP_GetLogConfPriority;
WERROR _PNP_GetLogConfPriority(struct pipes_struct *p, struct PNP_GetLogConfPriority *r);
struct PNP_AddResDes;
WERROR _PNP_AddResDes(struct pipes_struct *p, struct PNP_AddResDes *r);
struct PNP_FreeResDes;
WERROR _PNP_FreeResDes(struct pipes_struct *p, struct PNP_FreeResDes *r);
struct PNP_GetNextResDes;
WERROR _PNP_GetNextResDes(struct pipes_struct *p, struct PNP_GetNextResDes *r);
struct PNP_GetResDesData;
WERROR _PNP_GetResDesData(struct pipes_struct *p, struct PNP_GetResDesData *r);
struct PNP_GetResDesDataSize;
WERROR _PNP_GetResDesDataSize(struct pipes_struct *p, struct PNP_GetResDesDataSize *r);
struct PNP_ModifyResDes;
WERROR _PNP_ModifyResDes(struct pipes_struct *p, struct PNP_ModifyResDes *r);
struct PNP_DetectResourceLimit;
WERROR _PNP_DetectResourceLimit(struct pipes_struct *p, struct PNP_DetectResourceLimit *r);
struct PNP_QueryResConfList;
WERROR _PNP_QueryResConfList(struct pipes_struct *p, struct PNP_QueryResConfList *r);
struct PNP_SetHwProf;
WERROR _PNP_SetHwProf(struct pipes_struct *p, struct PNP_SetHwProf *r);
struct PNP_QueryArbitratorFreeData;
WERROR _PNP_QueryArbitratorFreeData(struct pipes_struct *p, struct PNP_QueryArbitratorFreeData *r);
struct PNP_QueryArbitratorFreeSize;
WERROR _PNP_QueryArbitratorFreeSize(struct pipes_struct *p, struct PNP_QueryArbitratorFreeSize *r);
struct PNP_RunDetection;
WERROR _PNP_RunDetection(struct pipes_struct *p, struct PNP_RunDetection *r);
struct PNP_RegisterNotification;
WERROR _PNP_RegisterNotification(struct pipes_struct *p, struct PNP_RegisterNotification *r);
struct PNP_UnregisterNotification;
WERROR _PNP_UnregisterNotification(struct pipes_struct *p, struct PNP_UnregisterNotification *r);
struct PNP_GetCustomDevProp;
WERROR _PNP_GetCustomDevProp(struct pipes_struct *p, struct PNP_GetCustomDevProp *r);
struct PNP_GetVersionInternal;
WERROR _PNP_GetVersionInternal(struct pipes_struct *p, struct PNP_GetVersionInternal *r);
struct PNP_GetBlockedDriverInfo;
WERROR _PNP_GetBlockedDriverInfo(struct pipes_struct *p, struct PNP_GetBlockedDriverInfo *r);
struct PNP_GetServerSideDeviceInstallFlags;
WERROR _PNP_GetServerSideDeviceInstallFlags(struct pipes_struct *p, struct PNP_GetServerSideDeviceInstallFlags *r);
NTSTATUS ntsvcs__op_dispatch(struct dcesrv_call_state *dce_call, TALLOC_CTX *mem_ctx, void *r);
NTSTATUS ntsvcs__op_reply(struct dcesrv_call_state *dce_call, TALLOC_CTX *mem_ctx, void *r);
NTSTATUS ntsvcs__op_ndr_push(struct dcesrv_call_state *dce_call, TALLOC_CTX *mem_ctx, struct ndr_push *push, const void *r);
NTSTATUS ntsvcs__op_local(struct dcesrv_call_state *dce_call, TALLOC_CTX *mem_ctx, void *r);
#endif /* __NDR_NTSVCS_SCOMPAT_H__ */
